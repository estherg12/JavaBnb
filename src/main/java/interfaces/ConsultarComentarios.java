
package interfaces;

import java.awt.Font;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.ListIterator;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import poo.pl2.Calificacion;
import poo.pl2.Inmueble;
import poo.pl2.UtilInmuebles;

/**
 *
 * @author Esthe
 */
public class ConsultarComentarios extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form ConsultarComentarios
     */
    
    private JLabel[] estrellas = new JLabel[5];
    private ArrayList<Calificacion> calificaciones = new ArrayList<>();
    private ArrayList<Calificacion> califInm = new ArrayList<>();
    private ListIterator<Calificacion> listIter; //Iterador para recorrer el ArrayList en ambas direcciones
    private Calificacion califAux;
    
    /**
     *
     * @param parent
     * @param modal
     */
    public ConsultarComentarios(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setVisible(true);
    }
    
    /**
     *
     * @param parent
     * @param modal
     * @param inmueble
     */
    public ConsultarComentarios(java.awt.Frame parent, boolean modal, Inmueble inmueble) {
        super(parent, modal);
        initComponents();
        
        calificaciones = UtilInmuebles.getCalificaciones();
        for(Calificacion calif: calificaciones){
            if(calif.getInmueble().getTitulo().equals(inmueble.getTitulo())){
                califInm.add(calif);
            }
        }
        
        consultarTodo();
        this.setVisible(true);
    }
    
    /**
     * prepara la visión de los inmuebles inicializando el arraylist y el list iterator
     * según el arraylist de inmuebles seleccionado
     * Muestra una serie de inmuebles
     */
    private void consultarTodo() {
        try {
            //creamos el iterador sobre el ArrayList
            listIter = califInm.listIterator();

            buttonAnterior.setEnabled(true);
            buttonSiguiente.setEnabled(true);
            
            //presentamos 
            if (listIter.hasNext()) {
                califAux = listIter.next();
            }
            if (califAux != null) {
                presenta(califAux);
            } else {
                JOptionPane.showMessageDialog(this, "No hay comentarios.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error: " + e.toString());
        }
    }
    
    /**
     *presenta los datos de cada inmueble rellenando los fields, checkpoints y creando un panel de estrellas
     * @param calif
     */
    public void presenta(Calificacion calif){
        fieldCorreo.setText(calif.getParticular().getCorreoElectronico());
        areaComentario.setText(calif.getComentario());
        
        panelEstrellas.removeAll();
        for(int i=0; i<estrellas.length; i++){
            estrellas[i] = new JLabel("\u2606");//estrella vacía
            estrellas[i].setFont(new Font("SansSerif",Font.PLAIN,30));
            final int index = i+1;
            panelEstrellas.add(estrellas[i]);
        }
        
        // Actualizar el diseño del panel
        panelEstrellas.revalidate();
        panelEstrellas.repaint();
        
        int calificacion = calif.getCalifNumero();
        
        setEstrellasCalificacion(calificacion);
        
        String calificacionTxt = String.valueOf(calificacion);
        labelCalificacion.setText(calificacionTxt);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonAnterior = new javax.swing.JButton();
        buttonSiguiente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaComentario = new javax.swing.JTextArea();
        fieldCorreo = new javax.swing.JTextField();
        panelEstrellas = new javax.swing.JPanel();
        labelCalificacion = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        buttonAnterior.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonAnterior.setForeground(new java.awt.Color(62, 123, 221));
        buttonAnterior.setIcon(new javax.swing.ImageIcon("C:\\Users\\Esthe\\OneDrive - Universidad de Alcala\\GISI\\1curso\\Programación\\PL2\\imagenes\\anterior.png")); // NOI18N
        buttonAnterior.setText("Anterior");
        buttonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAnteriorActionPerformed(evt);
            }
        });

        buttonSiguiente.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonSiguiente.setForeground(new java.awt.Color(62, 123, 221));
        buttonSiguiente.setIcon(new javax.swing.ImageIcon("C:\\Users\\Esthe\\OneDrive - Universidad de Alcala\\GISI\\1curso\\Programación\\PL2\\imagenes\\siguiente.png")); // NOI18N
        buttonSiguiente.setText("Siguiente");
        buttonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSiguienteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Particular");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Puntuación");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Comentario");

        areaComentario.setColumns(20);
        areaComentario.setRows(5);
        jScrollPane1.setViewportView(areaComentario);

        fieldCorreo.setText("correo");

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\Esthe\\OneDrive - Universidad de Alcala\\GISI\\1curso\\Programación\\PL2\\imagenes\\LogoPequeño.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(buttonAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelCalificacion, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(fieldCorreo)
                    .addComponent(panelEstrellas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 52, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAnterior)
                    .addComponent(buttonSiguiente))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fieldCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelCalificacion))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(panelEstrellas, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAnteriorActionPerformed
        // TODO add your handling code here:
        if(listIter.hasPrevious()){
            califAux = listIter.previous();
        }else{//reinicia al primer elemento
            while(listIter.hasNext()){
                listIter.next();
            }
            if(listIter.hasPrevious()){
                califAux = listIter.previous();
            }
        }

        if(califAux != null){
            presenta(califAux);
        }else {
            JOptionPane.showMessageDialog(this, "No hay inmuebles.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_buttonAnteriorActionPerformed

    private void buttonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSiguienteActionPerformed
        // TODO add your handling code here:
        if(listIter.hasNext()){
            califAux = listIter.next();
        }else{//reinicia al primer elemento
            while (listIter.hasPrevious()){
                listIter.previous();
            }
            if(listIter.hasNext()){
                califAux = listIter.next();
            }
        }

        if(califAux != null){
            presenta(califAux);
        }else {
            JOptionPane.showMessageDialog(this, "No hay inmuebles.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_buttonSiguienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultarComentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultarComentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultarComentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultarComentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConsultarComentarios dialog = new ConsultarComentarios(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaComentario;
    private javax.swing.JButton buttonAnterior;
    private javax.swing.JButton buttonSiguiente;
    private javax.swing.JTextField fieldCorreo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCalificacion;
    private javax.swing.JPanel panelEstrellas;
    // End of variables declaration//GEN-END:variables

    /**
     *rellena las estrellas vacías creadas en el método presenta() según la calificación del inmueble por parte del particular
     * @param c
     */
    public void setEstrellasCalificacion(int c){
        for(int i=0; i<c; i++){
            estrellas[i].setText("\u2605");
        }
    }
}
